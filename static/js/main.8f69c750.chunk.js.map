{"version":3,"sources":["containers/Dynamic.js","App.js","index.js"],"names":["addPrefetchExcludes","App","className","to","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Suspense","fallback","Dynamic","path","document","target","getElementById","renderMethod","hasChildNodes","ReactDOM","hydrate","render","Comp","module","hot","accept"],"mappings":"uMAEe,oBACb,yH,OCKFA,8BAAoB,CAAC,YAmDNC,IAjDf,WACE,OACE,kBAAC,OAAD,KACE,4BAAQC,UAAU,4CAChB,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aAEb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAChC,yBAAKC,IAAI,qBAAqBF,UAAU,SAD1C,iBAIA,4BAAQA,UAAU,yBAAyBG,KAAK,SAASC,cAAY,WAAWC,cAAY,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAAQC,aAAW,qBAC5K,0BAAMR,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BS,GAAG,kBAC3C,wBAAIT,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWU,KAAK,YAA7B,YAEF,wBAAIV,UAAU,YACZ,uBAAGA,UAAU,WAAWU,KAAK,YAA7B,WAEF,wBAAIV,UAAU,YACZ,uBAAGA,UAAU,WAAWU,KAAK,YAA7B,SAEF,wBAAIV,UAAU,YACZ,uBAAGA,UAAU,WAAWU,KAAK,YAA7B,wEAEF,wBAAIV,UAAU,YACZ,uBAAGA,UAAU,WAAWU,KAAK,YAA7B,iBAOZ,yBAAKV,UAAU,WACb,kBAAC,IAAMW,SAAP,CAAgBC,SAAU,2CACxB,kBAAC,IAAD,KACE,kBAACC,EAAD,CAASC,KAAK,YACd,kBAAC,SAAD,CAAQA,KAAK,Y,0FCnDzB,wEAWA,GAHef,YAAf,EAGwB,qBAAbgB,SAA0B,CACnC,IAAMC,EAASD,SAASE,eAAe,QAEjCC,EAAeF,EAAOG,gBACxBC,IAASC,QACTD,IAASE,OAEPA,EAAS,SAAAC,GACbL,EACE,kBAAC,eAAD,KACE,kBAACK,EAAD,OAEFP,IAKJM,EAAOvB,KAGHyB,GAAUA,EAAOC,KACnBD,EAAOC,IAAIC,OAAO,SAAS,WACzBJ,EAAOvB,U","file":"static/js/main.8f69c750.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => (\n  <div>\n    This is a dynamic page! It will not be statically exported, but is available\n    at runtime\n  </div>\n)\n","import React from 'react'\nimport { Root, Routes, addPrefetchExcludes } from 'react-static'\nimport { Link, Router } from 'components/Router'\nimport Dynamic from 'containers/Dynamic'\n\nimport './app.css'\n\n// Any routes that start with 'dynamic' will be treated as non-static routes\naddPrefetchExcludes(['dynamic'])\n\nfunction App() {\n  return (\n    <Root>\n      <header className=\"header-static navbar-sticky navbar-light\">\n        <nav className=\"navbar navbar-expand-lg\">\n          <div className=\"container\">\n\n            <Link className=\"navbar-brand\" to=\"/\">\n              <img src=\"img/logos/ksea.png\" className=\"logo\" /> KSEA Seattle\n            </Link>\n            \n            <button className=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\" href=\"#profile\">Profile</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#profile\">People</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#profile\">News</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#profile\">NMSC (전미수학과학경시대회)</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#profile\">Contact</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <div className=\"content\">\n        <React.Suspense fallback={<em>Loading...</em>}>\n          <Router>\n            <Dynamic path=\"dynamic\" />\n            <Routes path=\"*\" />\n          </Router>\n        </React.Suspense>\n      </div>\n    </Root>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppContainer } from 'react-hot-loader'\n\n// Your top level component\nimport App from './App'\n\n// Export your top level component as JSX (for static rendering)\nexport default App\n\n// Render your app\nif (typeof document !== 'undefined') {\n  const target = document.getElementById('root')\n\n  const renderMethod = target.hasChildNodes()\n    ? ReactDOM.hydrate\n    : ReactDOM.render\n\n  const render = Comp => {\n    renderMethod(\n      <AppContainer>\n        <Comp />\n      </AppContainer>,\n      target\n    )\n  }\n\n  // Render!\n  render(App)\n\n  // Hot Module Replacement\n  if (module && module.hot) {\n    module.hot.accept('./App', () => {\n      render(App)\n    })\n  }\n}\n"],"sourceRoot":""}